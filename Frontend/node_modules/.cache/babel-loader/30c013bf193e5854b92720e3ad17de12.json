{"ast":null,"code":"var _jsxFileName = \"/home/tmdev/Documents/csv-main/Frontend/src/components/userOtp/Hooks/OTPRender.js\";\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Input from \"./Input\";\nimport useOTP from \"./useOTP\";\nconst OtpInput = _ref => {\n  let {\n    OTPLength,\n    disabled,\n    autoFocus,\n    value = \"\",\n    onChange,\n    otpType,\n    secure,\n    className,\n    inputClassName,\n    inputStyles,\n    style,\n    placeholder\n  } = _ref;\n  const {\n    activeInput,\n    getOtpValue,\n    handleOnChange,\n    handleOnKeyDown,\n    handelOnInput,\n    handleOnPaste,\n    onInputFocus\n  } = useOTP({\n    autoFocus,\n    value,\n    otpType,\n    onChange,\n    OTPLength\n  });\n\n  // Needs to be memorized\n  const renderInputs = useMemo(() => {\n    const otp = getOtpValue();\n    const inputs = [];\n\n    // eslint-disable-next-line no-plusplus\n    for (let index = 0; index < OTPLength; index++) {\n      inputs.push( /*#__PURE__*/React.createElement(Input, {\n        className: inputClassName,\n        inputStyles: inputStyles,\n        key: index,\n        focus: activeInput === index,\n        value: otp[index],\n        onChange: handleOnChange,\n        onKeyDown: handleOnKeyDown,\n        onInput: handelOnInput,\n        onPaste: handleOnPaste,\n        onInputFocus: onInputFocus,\n        index: index\n        // onBlur={() => setActiveInput(-1)}\n        ,\n        disabled: disabled,\n        autoFocus: autoFocus,\n        secure: secure,\n        \"data-testid\": \"input\",\n        otpType: otpType,\n        placeholder: placeholder && placeholder[index],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }));\n    }\n    return inputs;\n  }, [getOtpValue, OTPLength, inputClassName, inputStyles, activeInput, handleOnChange, handleOnKeyDown, handelOnInput, handleOnPaste, onInputFocus, disabled, autoFocus, secure, otpType, placeholder]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      ...style\n    },\n    className: `${className}`,\n    \"data-testid\": \"otp-input-root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, renderInputs);\n};\nOtpInput.propTypes = {\n  className: PropTypes.string,\n  inputClassName: PropTypes.string,\n  OTPLength: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  secure: PropTypes.bool,\n  otpType: PropTypes.oneOf([\"number\", \"alpha\", \"alphanumeric\", \"any\"]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  inputStyles: PropTypes.object,\n  style: PropTypes.object,\n  placeholder: PropTypes.array\n};\nOtpInput.defaultProps = {\n  className: \"\",\n  inputClassName: \"\",\n  OTPLength: 4,\n  onChange: () => {},\n  disabled: false,\n  secure: false,\n  autoFocus: false,\n  value: \"\",\n  otpType: \"any\",\n  inputStyles: {},\n  style: {},\n  placeholder: undefined\n};\nexport default OtpInput;","map":{"version":3,"names":["React","useMemo","PropTypes","Input","useOTP","OtpInput","_ref","OTPLength","disabled","autoFocus","value","onChange","otpType","secure","className","inputClassName","inputStyles","style","placeholder","activeInput","getOtpValue","handleOnChange","handleOnKeyDown","handelOnInput","handleOnPaste","onInputFocus","renderInputs","otp","inputs","index","push","createElement","key","focus","onKeyDown","onInput","onPaste","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","propTypes","string","number","func","isRequired","bool","oneOf","oneOfType","object","array","defaultProps","undefined"],"sources":["/home/tmdev/Documents/csv-main/Frontend/src/components/userOtp/Hooks/OTPRender.js"],"sourcesContent":["// @flow\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Input from \"./Input\";\nimport useOTP from \"./useOTP\";\n\nconst OtpInput = ({\n  OTPLength,\n  disabled,\n  autoFocus,\n  value = \"\",\n  onChange,\n  otpType,\n  secure,\n  className,\n  inputClassName,\n  inputStyles,\n  style,\n  placeholder,\n}) => {\n  const {\n    activeInput,\n    getOtpValue,\n    handleOnChange,\n    handleOnKeyDown,\n    handelOnInput,\n    handleOnPaste,\n    onInputFocus,\n  } = useOTP({\n    autoFocus,\n    value,\n    otpType,\n    onChange,\n    OTPLength,\n  });\n\n  // Needs to be memorized\n  const renderInputs = useMemo(() => {\n    const otp = getOtpValue();\n    const inputs = [];\n\n    // eslint-disable-next-line no-plusplus\n    for (let index = 0; index < OTPLength; index++) {\n      inputs.push(\n        <Input\n          className={inputClassName}\n          inputStyles={inputStyles}\n          key={index}\n          focus={activeInput === index}\n          value={otp[index]}\n          onChange={handleOnChange}\n          onKeyDown={handleOnKeyDown}\n          onInput={handelOnInput}\n          onPaste={handleOnPaste}\n          onInputFocus={onInputFocus}\n          index={index}\n          // onBlur={() => setActiveInput(-1)}\n          disabled={disabled}\n          autoFocus={autoFocus}\n          secure={secure}\n          data-testid=\"input\"\n          otpType={otpType}\n          placeholder={placeholder && placeholder[index]}\n        />\n      );\n    }\n\n    return inputs;\n  }, [\n    getOtpValue,\n    OTPLength,\n    inputClassName,\n    inputStyles,\n    activeInput,\n    handleOnChange,\n    handleOnKeyDown,\n    handelOnInput,\n    handleOnPaste,\n    onInputFocus,\n    disabled,\n    autoFocus,\n    secure,\n    otpType,\n    placeholder,\n  ]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        ...style,\n      }}\n      className={`${className}`}\n      data-testid=\"otp-input-root\"\n    >\n      {renderInputs}\n    </div>\n  );\n};\n\nOtpInput.propTypes = {\n  className: PropTypes.string,\n  inputClassName: PropTypes.string,\n  OTPLength: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  secure: PropTypes.bool,\n  otpType: PropTypes.oneOf([\"number\", \"alpha\", \"alphanumeric\", \"any\"]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  inputStyles: PropTypes.object,\n  style: PropTypes.object,\n  placeholder: PropTypes.array,\n};\n\nOtpInput.defaultProps = {\n  className: \"\",\n  inputClassName: \"\",\n  OTPLength: 4,\n  onChange: () => {},\n  disabled: false,\n  secure: false,\n  autoFocus: false,\n  value: \"\",\n  otpType: \"any\",\n  inputStyles: {},\n  style: {},\n  placeholder: undefined,\n};\n\nexport default OtpInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}