{"ast":null,"code":"var _jsxFileName = \"/home/tmdev/Documents/csv-main/Frontend/src/components/userOtp/Otp.js\";\nconst OTPBox = () => {\n  const [otp, setOtp] = useState(new Array(4).fill(\"\"));\n  const handleChange = (element, index) => {\n    if (isNaN(element.value)) return false;\n    setOtp([...otp.map((d, idx) => idx === index ? element.value : d)]);\n\n    //Focus next input\n    if (element.nextSibling) {\n      element.nextSibling.focus();\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: \"Building OTP box using Hooks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }\n  }, \"Welcome to the channel!!!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }\n  }, \"Enter the OTP sent to you to verify your identity\"), otp.map((data, index) => {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      className: \"otp-field\",\n      type: \"text\",\n      name: \"otp\",\n      maxLength: \"1\",\n      key: index,\n      value: data,\n      onChange: e => handleChange(e.target, index),\n      onFocus: e => e.target.select(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 27\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }\n  }, \"OTP Entered - \", otp.join(\"\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary mr-2\",\n    onClick: e => setOtp([...otp.map(v => \"\")]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: e => alert(\"Entered OTP is \" + otp.join(\"\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }\n  }, \"Verify OTP\")))));\n};\nexport default OTPBox;","map":{"version":3,"names":["OTPBox","otp","setOtp","useState","Array","fill","handleChange","element","index","isNaN","value","map","d","idx","nextSibling","focus","React","createElement","Fragment","Header","title","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","data","type","name","maxLength","key","onChange","e","target","onFocus","select","join","onClick","v","alert"],"sources":["/home/tmdev/Documents/csv-main/Frontend/src/components/userOtp/Otp.js"],"sourcesContent":["const OTPBox = () => {\n  const [otp, setOtp] = useState(new Array(4).fill(\"\"));\n\n  const handleChange = (element, index) => {\n      if (isNaN(element.value)) return false;\n\n      setOtp([...otp.map((d, idx) => (idx === index ? element.value : d))]);\n\n      //Focus next input\n      if (element.nextSibling) {\n          element.nextSibling.focus();\n      }\n  };\n\n  return (\n      <>\n          <Header title=\"Building OTP box using Hooks\" />\n\n          <div className=\"row\">\n              <div className=\"col text-center\">\n                  <h2>Welcome to the channel!!!</h2>\n                  <p>Enter the OTP sent to you to verify your identity</p>\n\n                  {otp.map((data, index) => {\n                      return (\n                          <input\n                              className=\"otp-field\"\n                              type=\"text\"\n                              name=\"otp\"\n                              maxLength=\"1\"\n                              key={index}\n                              value={data}\n                              onChange={e => handleChange(e.target, index)}\n                              onFocus={e => e.target.select()}\n                          />\n                      );\n                  })}\n\n                  <p>OTP Entered - {otp.join(\"\")}</p>\n                  <p>\n                      <button\n                          className=\"btn btn-secondary mr-2\"\n                          onClick={e => setOtp([...otp.map(v => \"\")])}\n                      >\n                          Clear\n                      </button>\n                      <button\n                          className=\"btn btn-primary\"\n                          onClick={e =>\n                              alert(\"Entered OTP is \" + otp.join(\"\"))\n                          }\n                      >\n                          Verify OTP\n                      </button>\n                  </p>\n              </div>\n          </div>\n      </>\n  );\n};\n\nexport default OTPBox;"],"mappings":"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"},"metadata":{},"sourceType":"module"}